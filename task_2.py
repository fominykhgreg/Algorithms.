"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def recurs(number, chet=0, nechet=0):
    if number == 0:
        return chet, nechet
    else:

        n = number % 10
        number = number // 10

        if n % 2 == 0:
            chet += 1
        else:
            nechet += 1
        return recurs(number, chet, nechet)


try:
    number = int(input("Введите натуральное число: "))
    print(f"Количество четных и нечетных цифр в числе равно: {recurs(number)}")
except ValueError:
    print("Введите корректное значение.")








# Черновик
# Решение через индексы
# def z():
#
#     n=0
#     chislo=int(input("Введите любое число: "))
#
#     chislo = list(str(chislo))
#     m = len(chislo)
#
#     if len(chislo)!=0:
#         for i in chislo:
#             i=int(i)
#             if i%2==0:
#                 n+=1
#                 chislo[1:]
#
#             else:
#                  chislo[1:]
#         l=m-n
#         return print(f'Количество четных цифр в числе: {n},нечетных: {l}'),z()
#     return z()
# z()
