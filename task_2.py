"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная. """


def min_value_n2(sp):  # Сложность - O(n^2)
    for i in sp:  # 0(n) вложеная в O(n) = O(n^2)
        min_number = i
        for j in sp:
            if min_number > j:
                min_number = j
        if min_number < i:
            return print(min_number)  # O(1)


min_value_n2([4, 2, 3, 4, 5])

"""
Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать где какая сложность.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""


def min_value(sp):  # Сложность - O(n)

    min_number = sp[0]
    for i in sp:  # O(n)
        if i < min_number:
            min_number = i

    return print(min_number)  # O(1)


min_value([3, 2, 3, 5, 6])
