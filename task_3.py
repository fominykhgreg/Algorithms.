"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
base_company = {
    'adidas': 30000,
    'nike': 1000,
    'puma': 10000,
    'lamoda': 50000,
    'unichel': 15700
}

# сложность = O(n log n)
list_from_dictioanary = list(base_company.items())
list_from_dictioanary.sort(key = lambda i: i[1], reverse = True)  # sort= n log n
for i in range(3):
    print(list_from_dictioanary[i][0], ":", list_from_dictioanary[i][1])
print('#' * 18)


# сложность = O(n) Это решение будет оптимальнее ,потому что имеет наименьшую сложность
def three_max(list_input):  # 0(n)
    input_max = {}
    list_d = dict(list_input)
    for i in range(3):  # 0(1)
        maximum = max(list_d.items(), key = lambda k_v: k_v[1])  # 0(n)
        del list_d[maximum[0]]
        input_max[maximum[0]] = maximum[1]
    return input_max


print(three_max(base_company))
